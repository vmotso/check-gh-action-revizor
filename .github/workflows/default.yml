name: default

on: push

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "1.13"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
  test:
    runs-on: ubuntu-latest
    name: tests
    env:
      REVIZOR_URL: ${{ secrets.REVIZOR_URL }}
      REVIZOR_TOKEN: ${{ secrets.REVIZOR_TOKEN }}
      SCALR_TOKEN: ${{ secrets.SCALR_TOKEN }}
    steps:
      - name: Set flags from PR
        if: ${{  github.event.pull_request }}
        env:
          API_BRANCH: ${{ contains(github.event.pull_request.body, '[API_BRANCH]') }}
          DB_BRANCH: ${{ contains(github.event.pull_request.body, '[DB_BRANCH]') }}
        run: |
          echo "::set-env name=API_BRANCH::${API_BRANCH}"
          echo "Set env var from PR: API_BRANCH=${API_BRANCH}"
          echo "::set-env name=DB_BRANCH::${DB_BRANCH}"
          echo "Set env var from PR: DB_BRANCH=${DB_BRANCH}"
      - name: Create container
        id: create
        uses: Scalr/gh-action-revizor@feature/SCALRCORE-16917
        with:
          command: create
      - name: Acceptance tests
        env:
          SCALR_HOSTNAME: ${{ steps.create.outputs.hostname }}
        run: printenv
        # run: |
        #   git clone https://github.com/Scalr/terraform-provider-scalr.git
        #   cd terraform-provider-scalr
        #   git checkout feature/SCALRCORE-16917
        #   make testacc
      - name: Delete container
        id: delete
        if: ${{  steps.create.outputs.container_id }}
        uses: Scalr/gh-action-revizor@feature/SCALRCORE-16917
        with:
          command: delete
          container_id: ${{ steps.create.outputs.container_id }}
